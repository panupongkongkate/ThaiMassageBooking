@page "/profile"
@using MassageBooking.Models
@using MassageBooking.Services
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå - ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≠‡∏á‡∏ô‡∏ß‡∏î</PageTitle>

<div class="profile-container">
    @if (isLoading)
    {
        <div class="loading-container">
            <div class="spinner"></div>
            <p class="loading-text">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ...</p>
        </div>
    }
    else if (!isLoggedIn)
    {
        <div class="not-logged-in">
            <div class="login-prompt-container">
                <div class="login-icon">üë§</div>
                <h2 class="login-title">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h2>
                <p class="login-text">‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>
                <button class="login-btn" @onclick="GoToLogin">
                    ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                </button>
            </div>
        </div>
    }
    else
    {
        <div class="profile-content">
            <!-- Profile Header -->
            <div class="profile-header">
                <div class="profile-avatar">
                    @if (!string.IsNullOrEmpty(pictureUrl))
                    {
                        <img src="@pictureUrl" alt="Profile Picture" class="avatar-image" />
                    }
                    else
                    {
                        <div class="avatar-placeholder">
                            <span class="avatar-icon">üë§</span>
                        </div>
                    }
                </div>
                <div class="profile-info">
                    <h1 class="profile-name">@displayName</h1>
                    <p class="profile-subtitle">‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≠‡∏á‡∏ô‡∏ß‡∏î</p>
                </div>
            </div>


            <!-- Profile Menu -->
            <div class="profile-menu">
                <div class="menu-section">
                    <h3 class="section-title">‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</h3>
                    <div class="menu-items">
                        <button class="menu-item" @onclick="GoToBookings">
                            <div class="menu-icon">üìã</div>
                            <div class="menu-content">
                                <div class="menu-title">‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</div>
                                <div class="menu-subtitle">‡∏î‡∏π‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
                            </div>
                            <div class="menu-arrow">‚ùØ</div>
                        </button>
                        
                        <button class="menu-item" @onclick="GoToHome">
                            <div class="menu-icon">‚ûï</div>
                            <div class="menu-content">
                                <div class="menu-title">‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà</div>
                                <div class="menu-subtitle">‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà</div>
                            </div>
                            <div class="menu-arrow">‚ùØ</div>
                        </button>
                    </div>
                </div>

                <div class="menu-section">
                    <h3 class="section-title">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</h3>
                    <div class="menu-items">
                        <div class="info-item">
                            <div class="info-icon">üë§</div>
                            <div class="info-content">
                                <div class="info-label">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</div>
                                <div class="info-value">@displayName</div>
                            </div>
                        </div>
                        
                        <div class="info-item">
                            <div class="info-icon">üîó</div>
                            <div class="info-content">
                                <div class="info-label">‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ú‡πà‡∏≤‡∏ô</div>
                                <div class="info-value">LINE Account</div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="menu-section settings-section">
                    <h3 class="section-title">‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</h3>
                    <div class="menu-items">
                        <button class="menu-item danger" @onclick="ShowLogoutConfirm">
                            <div class="menu-icon">üö™</div>
                            <div class="menu-content">
                                <div class="menu-title">‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</div>
                                <div class="menu-subtitle">‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</div>
                            </div>
                            <div class="menu-arrow">‚ùØ</div>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Logout Confirmation Modal -->
@if (showLogoutModal)
{
    <div class="modal-overlay" @onclick="HideLogoutConfirm">
        <div class="modal-content" @onclick:stopPropagation="true">
            <div class="modal-header">
                <div class="logout-icon">üö™</div>
                <h2 class="modal-title">‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</h2>
            </div>
            <div class="modal-body">
                <p class="modal-text">‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?</p>
            </div>
            <div class="modal-footer">
                <button class="modal-btn secondary" @onclick="HideLogoutConfirm">
                    ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                </button>
                <button class="modal-btn danger" @onclick="ConfirmLogout">
                    ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
                </button>
            </div>
        </div>
    </div>
}

@code {
    private bool isLoading = true;
    private bool isLoggedIn = false;
    private string displayName = string.Empty;
    private string pictureUrl = string.Empty;
    private bool showLogoutModal = false;

    protected override async Task OnInitializedAsync()
    {
        // Don't check login here due to static rendering
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadUserProfile();
            
            // Check if user is logged in, redirect to login if not
            if (!isLoggedIn)
            {
                Navigation.NavigateTo("/login");
                return;
            }
            StateHasChanged();
        }
    }

    private async Task LoadUserProfile()
    {
        try
        {
            isLoading = true;
            
            var userId = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "userId");
            if (!string.IsNullOrEmpty(userId))
            {
                isLoggedIn = true;
                displayName = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "displayName") ?? "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ";
                pictureUrl = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "pictureUrl") ?? "";
            }
            else
            {
                isLoggedIn = false;
            }
        }
        catch
        {
            isLoggedIn = false;
        }
        finally
        {
            isLoading = false;
        }
    }

    private void GoToLogin()
    {
        Navigation.NavigateTo("/login");
    }

    private void GoToBookings()
    {
        Navigation.NavigateTo("/bookings");
    }

    private void GoToHome()
    {
        Navigation.NavigateTo("/home");
    }

    private void ShowLogoutConfirm()
    {
        showLogoutModal = true;
    }

    private void HideLogoutConfirm()
    {
        showLogoutModal = false;
    }

    private async Task ConfirmLogout()
    {
        try
        {
            // Clear session storage
            await JSRuntime.InvokeVoidAsync("sessionStorage.clear");
            
            // Redirect to login
            Navigation.NavigateTo("/login", forceLoad: true);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Logout error: {ex.Message}");
            // Force redirect anyway
            Navigation.NavigateTo("/login", forceLoad: true);
        }
    }
}